import("Music.msg");

const int ShufflePool = 9999;
const int ShuffleInit = 9998;
const int PreviousSong = 9997;

const int ShuffleAll = 9999;
const int ShufflePersona = 9998;
const int ShuffleSMT = 9997;
const int ShuffleSpin = 9996;
const int ShuffleP1 = 9995;
const int ShuffleIS = 9994;
const int ShuffleEP = 9993;
const int ShuffleP3 = 9992;
const int ShuffleP4 = 9991;
const int ShufflePQ = 9990;
const int ShuffleP5 = 9989;
const int ShuffleSMT1 = 9988;
const int ShuffleSMT3 = 9987;
const int ShuffleMJ = 9986;
const int ShuffleMJ2 = 9985;
const int ShuffleDDS = 9984;
const int ShuffleRaidou = 9983;
const int ShuffleOther = 9982;


const int p1_start = 500;
const int p1_len = 6;
const int is_start = 550;
const int is_len = 10;
const int ep_start = 600;
const int ep_len = 9;
const int p3_start = 1200;
const int p3_len = 4;
const int p4_start = 650;
const int p4_len = 4;
const int p5_start = 700;
const int p5_len = 4;
const int pq_start = 750;
const int pq_len = 3;
const int smt1_start = 800;
const int smt1_len = 4;
const int smt3_start = 850;
const int smt3_len = 4;
const int mj_start = 900;
const int mj_len = 3;
const int mj2_start = 950;
const int mj2_len = 5;
const int dds_start = 1050;
const int dds_len = 4;
const int rai_start = 1100;
const int rai_len = 4;
const int misc_start = 1150;
const int misc_len = 3;

const int series = 3;
const int persona_games = 7;
const int smt_games = 2;
const int spin_games = 5;

void Random() {
	int selection = AI_RND(series);
	SET_CNT(ShufflePool, ShuffleAll);
	switch (selection) {
		case 0:
			RandomPersona();
			return;
		case 1:
			RandomSMT();
			return;
		case 2:
			RandomSpin();
			return;
		default:
			return;
	}
}

void RandomPersona() {
	if (GET_CNT(ShuffleInit) == 2) {
		SET_CNT(ShufflePool, ShufflePersona);
	}
	int selection = AI_RND(persona_games);
	switch (selection) {
		case 0:
			RandomP1();
			return;
		case 1:
			RandomIS();
			return;
		case 2:
			RandomEP();
			return;
		case 3:
			RandomP3();
			return;
		case 4:
			RandomP4();
			return;
		case 5:
			RandomP5();
			return;
		case 6:
			RandomPQ();
			return;
		default:
			return;
	}
}

void RandomSMT() {
	if (GET_CNT(ShuffleInit) == 2) {
		SET_CNT(ShufflePool, ShuffleSMT);
	}
	int selection = AI_RND(smt_games);
	switch (selection) {
		case 0:
			RandomSMT1();
			return;
		case 1:
			RandomSMT3();
			return;
		default:
			return;
	}
}

void RandomSpin() {
	if (GET_CNT(ShuffleInit) == 2) {
		SET_CNT(ShufflePool, ShuffleSpin);
	}
	int selection = AI_RND(spin_games);
	switch (selection) {
		case 0:
			RandomMJ();
			return;
		case 1:
			RandomMJ2();
			return;
		case 2:
			RandomDDS();
			return;
		case 3:
			RandomRaidou();
			return;
		case 4:
			RandomOther();
			return;
		default:
			return;
	}
}

void RandomP1() {
	int randomsong = AI_RND(p1_len) + p1_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleP1);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShufflePersona) {
			RandomPersona();
		}
		else {
			RandomP1();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomIS() {
	int randomsong = AI_RND(is_len) + is_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleIS);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShufflePersona) {
			RandomPersona();
		}
		else {
			RandomIS();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomEP() {
	int randomsong = AI_RND(ep_len) + ep_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleEP);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShufflePersona) {
			RandomPersona();
		}
		else {
			RandomEP();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomP3() {
	int randomsong = AI_RND(p3_len) + p3_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleP3);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShufflePersona) {
			RandomPersona();
		}
		else {
			RandomP3();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomP4() {
	int randomsong = AI_RND(p4_len) + p4_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleP4);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShufflePersona) {
			RandomPersona();
		}
		else {
			RandomP4();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomPQ() {
	int randomsong = AI_RND(pq_len) + pq_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShufflePQ);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShufflePersona) {
			RandomPersona();
		}
		else {
			RandomPQ();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomP5() {
	int randomsong = AI_RND(p5_len) + p5_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleP5);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShufflePersona) {
			RandomPersona();
		}
		else {
			RandomP5();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomSMT1() {
	int randomsong = AI_RND(smt1_len) + smt1_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleSMT1);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShuffleSMT) {
			RandomSMT();
		}
		else {
			RandomSMT1();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomSMT3() {
	int randomsong = AI_RND(smt3_len) + smt3_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleSMT3);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShuffleSMT) {
			RandomSMT();
		}
		else {
			RandomSMT3();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomMJ() {
	int randomsong = AI_RND(mj_len) + mj_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleMJ);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShuffleSpin) {
			RandomSpin();
		}
		else {
			RandomMJ();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomMJ2() {
	int randomsong = AI_RND(mj2_len) + mj2_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleMJ2);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShuffleSpin) {
			RandomSpin();
		}
		else {
			RandomMJ2();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomDDS() {
	int randomsong = AI_RND(dds_len) + dds_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleDDS);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShuffleSpin) {
			RandomSpin();
		}
		else {
			RandomDDS();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomRaidou() {
	int randomsong = AI_RND(rai_len) + rai_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleRaidou);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShuffleSpin) {
			RandomSpin();
		}
		else {
			RandomRaidou();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void RandomOther() {
	int randomsong = AI_RND(misc_len) + misc_start;
	if (GET_CNT(ShuffleInit) == 3) {
		SET_CNT(ShufflePool, ShuffleOther);
	}
	if (randomsong == GET_CNT(1) || randomsong == GET_CNT(PreviousSong)) {
		if (GET_CNT(ShufflePool) == ShuffleAll) {
			Random();
		}
		else if (GET_CNT(ShufflePool) == ShuffleSpin) {
			RandomSpin();
		}
		else {
			RandomOther();
		}
	}
	else {
	playRandomBGM(randomsong);
	}
}

void ReRandom() {
	switch (GET_CNT(ShufflePool)) {
	case 9982:
		RandomOther();
		break;
	case 9983:
		RandomRaidou();
		break;
	case 9984:
		RandomDDS();
		break;
	case 9985:
		RandomMJ2();
		break;
	case 9986:
		RandomMJ();
		break;
	case 9987:
		RandomSMT3();
		break;
	case 9988:
		RandomSMT1();
		break;
	case 9989:
		RandomP5();
		break;
	case 9990:
		RandomPQ();
		break;
	case 9991:
		RandomP4();
		break;
	case 9992:
		RandomP3();
		break;
	case 9993:
		RandomEP();
		break;
	case 9994:
		RandomIS();
		break;
	case 9995:
		RandomP1();
		break;
	case 9996:
		RandomSpin();
		break;
	case 9997:
		RandomSMT();
		break;
	case 9998:
		RandomPersona();
		break;
	case 9999:
		Random();
		break;
	default:
		break;
	}
}

void playBGM(int songid) {
	CALL_BGM(songid);
	SET_CNT(1, songid);
	SET_CNT(ShufflePool, 0);
	if (GET_CNT(1) >= 500) {
	MSG(BASE_HUKA_ORDER_BGM_CHANGE_DO);
	}
}

void playRandomBGM(int songid) {
	//Set PreviousSong to Current Song
	SET_CNT(PreviousSong, GET_CNT(1));
	
	//Runs if Shuffle was Automatic
	if (GET_CNT(ShuffleInit) != 1 && GET_CNT(ShuffleInit) != 2 && GET_CNT(ShuffleInit) != 3) {
		//Check's if current song isn't Fuuka's and turns off Randomization
		if (GET_CNT(1) < 500) {
			SET_CNT(ShufflePool, 0);
		} 
		//Check's if current song is Fuuka's and plays it
		else {
			CALL_BGM(songid);
			SET_CNT(1, songid);
			SET_CNT(ShuffleInit, 0);
		}
	} else {
		CALL_BGM(songid);
		SET_CNT(1, songid);
		SET_CNT(ShuffleInit, 0);
	}
}
